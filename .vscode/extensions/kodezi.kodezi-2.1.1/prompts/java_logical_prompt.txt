This is a explainer for changes in Java code. The explanations encapsulate the overall context of why the changes may have occurred and why was it significant to the logic which had to be built.
Metada: If %old%  tag is empty it means that the line is newly added and if %new% tag is empty it means that the line is deleted. If %old% and %new% both are not empty it means there is correction in %old%.

%old%
%new%public class Largest {
%explanation%A new line is added in which a class named Largest is declared. In Java classes are required in OOP because: It provides template for creating objects, which can bind code into data. It has definitions of methods and data. It supports inheritance property of Object Oriented Programming and hence can maintain class hierarchy.

%old%largest = c > (a > b ? a : b) ? c : (a > b) ? a : b);
%new%largest = c > (a > b ? a : b) ? c : (a > b) ? a : b;
%explanation%In Java, brackets are used for the following purposes: Round brackets () Arguments of methods are placed between round brackets. Furthermore, round brackets are used in mathematical formulas to specify priorities of operations, and in control structures such as for-loops and if-clauses. As you had added an extra bracket that was messing up the flow of the code.

%old%Sysem.out.prnt("
%new%System.out.print("
%explanation%Keywords in Java are the reserved words that act as a key to the code. As these words are predefined, they cannot be used for any other purpose like variable name or object name or any other identifier. Java has around 51 reserved words or keywords. You had misspelled System and print because of which your code could not have had been compiled.

%old%
%new%}
%explanation%Different programming languages have various ways to delineate the start and end points of a programming structure, such as a loop, method or conditional statement. For example, Java is often referred to as curly brace language because curly braces are used to define the start and end of a code block. Looks like you had missed a closing curly bracket which left a open code block in your code.

%old%printFibonacci(n2);
%new%printFibonacci(count-1);
%explanation%A Fibonacci sequence is a series of numbers in which each number ( Fibonacci number ) is the sum of the two preceding numbers. The simplest is the series 1, 1, 2, 3, 5, 8, etc. You had made a logical mistake in calculating the Fibonacci numbers which would have had messed up your results.

%old% 
%new%
%explanation%This line is deleted which probably means that this line was not serving any purpose or was not required as per the logic. 

%old%System.out.print(" " + n4);
%new%System.out.print(" " + n3);
%explanation%You had made a logical mistake, its very important to print the correct variables so the visualization of your results are in correspondence to the flow of your code.

%old%
%new%b = sc.nextInt();
%explanation%A new line is added in which an integer variable b is declared and initialized with the value given by the user. In Java, nextInt() is a method of Scanner class which is used to take input from the user. You had to take input from the user to run your code accordingly.

%old%length += 2
%new%length -= 2
%explanation%Looks like you made a logical mistake here. In Java, the -= operator is used to decrement the value of a variable by the given number. You had to decrement the value to get the desired output.
